[user]
	name = Nuno Freire
	email = greven.pt@gmail.com
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDgXztbLGyrQMqSAmQdEUrdAiO9/4ztR0pNNqCl1EUl9

[help]
	autocorrect = 1

[core]
	filemode = true
	logallrefupdates = true
	whitespace = space-before-tab, trailing-space

[gpg]
	format = ssh

[gpg "ssh"]
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign

[tag]
	gpgsign = true

[commit]
	cleanup = scissors
	gpgsign = true

[color]
	ui = auto

[branch]
	autosetupmerge = true

[diff]
	renames = copies
	mnemonicprefix = true
	compactionHeuristic = true

[push]
	default = current

[credential]
	helper = osxkeychain

[pull]
	rebase = false

[init]
	defaultBranch = main

[alias]
    state = status -s
    aa = add --all
    co = checkout
    cp = cherry-pick
    di = diff
    branches = branch -a
    remotes = remote
    tags = tag -l
    sprout = checkout -B
    amend = commit --amend
    back = checkout -
    unstash = stash pop
    track = follow
    pullff = pull --ff-only
    rewind = reset --hard HEAD~1
    unstage = reset HEAD # Unstage any files that have been added to the staging area
    uncommit = reset HEAD^
    ri = rebase --interactive --autosquash --autostash
    su = submodule update
    incoming = !git fetch -q origin develop && git log HEAD..FETCH_HEAD # Incoming changes
    outgoing = !git fetch -q origin develop && git log FETCH_HEAD..HEAD # Outgoing changes
    graph = log --graph --pretty=oneline --abbrev-commit # Pretty log
    timeline = log --pretty='%C(yellow)%h %C(cyan)%cd %Cblue%aN%C(auto)%d %Creset%s' --date=relative --date-order # Timeline log
    last = !git show | awk \"NR==1 {print \\$2}\"
    branch-name = !git rev-parse --abbrev-ref HEAD # Get the current branch name
    publish = !git push -u origin $(git branch-name) # Push the current branch to the remote "origin" and set it to track the upstream branch
    unpublish = !git push origin :$(git branch-name) # Delete the remote version of the current branch
    code-review = difftool origin/master...
    diffc = diff --cached # Show changes that have been staged
    sync = !git fetch --all --prune && git rebase -p --autostash $1 # Update branch with the upstream
